/*
 @file ConsoleIn.lns
 @brief アウトポート出力のRTCサンプル
*/



import openrtm_lns;



// RTCの仕様をテーブルで定義する
let consolein_spec = {
	 "implementation_id":"ConsoleIn",
	 "type_name":"ConsoleIn",
	 "description":"Console input component",
	 "version":"1.0",
	 "vendor":"Nobuhiko Miyamoto",
	 "category":"example",
	 "activity_type":"DataFlowComponent",
	 "max_instance":"10",
	 "language":"LuneScript",
	 "lang_type":"script"};





// @class ConsoleIn
class ConsoleIn extend openrtm_lns.RTObjectBase {
    let mut _d_out:Map<str,stem>;
    let mut _outOut:openrtm_lns.OutPort_lns;
    // コンストラクタ
    // @param manager マネージャ
    pub fn __init( manager: openrtm_lns.Manager ) {
        super( manager );
        // データ格納変数
        self._d_out = openrtm_lns.RTCUtil.instantiateDataType("::RTC::TimedLong");
        // アウトポート生成
        self._outOut = unwrap openrtm_lns.OutPort.new("out",self._d_out,"::RTC::TimedLong");
    }
    // 初期化時のコールバック関数
    // @return リターンコード
    pub override fn onInitialize() mut : openrtm_lns.ReturnCode_t {
        self.addOutPort("out",self._outOut);
        return openrtm_lns.ReturnCode_t.RTC_OK;
    }

    // アクティブ状態の時の実行関数
    // @param ec_id 実行コンテキストのID
    // @return リターンコード
    pub override fn onExecute(ec_id:int) mut : openrtm_lns.ReturnCode_t {
        print("Please input number: ");
        openrtm_lns.OutPort.setTimestamp(self._d_out);
        // 出力データ格納
        self._d_out.data = 123;
        // データ書き込み
        self._outOut.write();
        return openrtm_lns.ReturnCode_t.RTC_OK;
    }
}



fn ConsoleInCreate( manager:openrtm_lns.Manager ) : &openrtm_lns.RTObject_lns {
    let rtobj = new ConsoleIn(manager);
    return rtobj.getComp();
}


pub fn ConsoleInInit( manager: openrtm_lns.Manager ) {
    let prof = openrtm_lns.Properties.new(consolein_spec);
    manager.registerFactory(prof, ConsoleInCreate, openrtm_lns.Factory.Delete);
}

fn MyModuleInit( manager:openrtm_lns.Manager ) {
    ConsoleInInit(manager);
    let comp = manager.createComponent("ConsoleIn");
}



openrtm_lns.Manager.init([]);
openrtm_lns.Manager.setModuleInitProc(MyModuleInit);
openrtm_lns.Manager.activateManager();
openrtm_lns.Manager.runManager();